---
swagger: "2.0"
info:
  description: |
    This is a simple book server.
  version: 1.0.0
  title: book_boutique
  termsOfService: http://swagger.io/terms/
  contact:
    email: 10493858@polimi.it
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: i2lfy3dum9.execute-api.eu-west-1.amazonaws.com
basePath: /Prod/api
tags:
- name: book
  description: Books
- name: author
  description: Authors
- name: user
  description: Users
- name: theme
  description: Themes
- name: genre
  description: Genres
- name: event
  description: Events
- name: cart
  description: Carts
paths:
  /book:
    get:
      tags:
      - book
      summary: Find all books
      operationId: findAll
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      - name: theme
        in: query
        description: The theme of the books
        required: false
        type: string
        default: solitude
      - name: genre
        in: query
        description: The genre of the books
        required: false
        type: string
        default: narrative
      - name: author
        in: query
        description: The author of the books
        required: false
        type: string
        default: PaoloGiordano
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        400:
          description: Invalid status value
  /book/{isbn}:
    get:
      tags:
      - book
      summary: Finds books by isbn
      operationId: findBooksByISBN
      produces:
      - application/json
      - application/xml
      parameters:
      - name: isbn
        in: path
        description: ISBN of the book
        required: true
        type: string
        default: "9788447394567"
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        400:
          description: Invalid status value
  /book/similar/{isbn}:
    get:
      tags:
      - book
      summary: Finds similar books to a book identified by isbn
      operationId: findSimilarBooksByISBN
      produces:
      - application/json
      - application/xml
      parameters:
      - name: isbn
        in: path
        description: ISBN of the book
        required: true
        type: string
        default: "9788447394567"
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        400:
          description: Invalid status value
  /book/favourite:
    get:
      tags:
      - book
      summary: Finds favourite books
      operationId: findFavouriteBooks
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        400:
          description: Invalid status value
  /book/bestseller:
    get:
      tags:
      - book
      summary: Finds best selling books
      operationId: findBestSellingBooks
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        400:
          description: Invalid status value
  /author:
    get:
      tags:
      - author
      summary: Finds all author
      operationId: findAllAuthors
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        400:
          description: Invalid status value
  /author/{id}:
    get:
      tags:
      - author
      summary: Finds all author by id
      operationId: findAuthorById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of the author
        required: true
        type: string
        default: PaoloGiordano
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        400:
          description: Invalid status value
  /theme:
    get:
      tags:
      - theme
      summary: Finds all themes
      operationId: findAllThemes
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'
        400:
          description: Invalid status value
  /genre:
    get:
      tags:
      - genre
      summary: Finds all genres
      operationId: findAllGenres
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Genre'
        400:
          description: Invalid status value
  /login:
    post:
      tags:
      - user
      summary: Login
      operationId: userLoginPOST
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: username
        in: query
        required: true
        type: string
        default: Giacomo
      - name: password
        in: query
        required: true
        type: string
        default: Password
      responses:
        200:
          description: successful login
        404:
          description: unauthorized
  /register:
    post:
      tags:
      - user
      summary: Register
      description: Register into the store
      operationId: userRegisterPOST
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: succesfull registration
        404:
          description: unauthorized
  /event:
    get:
      tags:
      - event
      summary: Finds all events
      operationId: findAllEvents
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      - name: isbn
        in: query
        description: The isbn of the book, if used filter the event by the book ISBN
        required: false
        type: string
        default: "9788498127547"
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        400:
          description: Invalid status value
  /event/month/current:
    get:
      tags:
      - event
      summary: Finds all events this month
      operationId: findAllEventsInThisMonth
      produces:
      - application/json
      - application/xml
      parameters:
      - name: page
        in: query
        description: The page of the search (starting from 1)
        required: false
        type: integer
        default: 1
      - name: pageSize
        in: query
        description: The page-size of the search
        required: false
        type: integer
        default: 5
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        400:
          description: Invalid status value
  /event/{id}:
    get:
      tags:
      - event
      summary: Finds events by id
      operationId: findEventsById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: Id of the event
        required: true
        type: string
        default: americanbookfest
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        400:
          description: Invalid status value
  /cart:
    post:
      tags:
      - cart
      summary: Add book to user's cart
      operationId: addBookToCart
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid status value
    put:
      tags:
      - cart
      summary: Edit a book of user's cart
      operationId: editBookToCart
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid status value
  /cart/{username}:
    get:
      tags:
      - cart
      summary: Finds cart by username
      operationId: findCartByUsername
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: User's cart
        required: true
        type: string
        default: Giacomo
      responses:
        200:
          description: successful operation
        400:
          description: Invalid status value
    delete:
      tags:
      - cart
      summary: Delete a book from user's cart, it is idempotent (if there is or there is not an object, after this API has been used, the cart item disappear)
      operationId: deleteBookFromCart
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: User's cart
        required: true
        type: string
        default: Giacomo
      - name: isbn
        in: query
        required: true
        type: string
        default: "9788447394567"
      responses:
        200:
          description: successful operation
        400:
          description: Invalid status value
definitions:
  Book:
    type: object
    properties:
      isbn:
        type: string
        example: "9788447394567"
      title:
        type: string
        example: The Solitude of Prime Numbers
      description:
        type: string
        example: description
      authorId:
        type: string
      themeId:
        type: string
        example: solitude
      genreId:
        type: string
        example: narrative
      price:
        type: number
        example: 14.77
  Author:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      surname:
        type: string
      bio:
        type: string
  Event:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
      time:
        type: string
        format: date-time
      bookId:
        type: string
  Theme:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  Genre:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  User:
    type: object
    properties:
      username:
        type: string
        example: Giacomo
      name:
        type: string
        example: Giacomo
      surname:
        type: string
        example: Rossi
      password:
        type: string
        example: Password
  Cart:
    type: object
    properties:
      username:
        type: string
        example: Giacomo
      isbn:
        type: string
        example: "9788447394567"
      quantity:
        type: integer
        example: 1
      price:
        type: integer
        example: "14.77"
